name: spinnaker-auto-install
env:
  SPINNAKER_VERSION: 1.21.0
  KUBECTL_VERSION: v1.18.0

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  #schedule:
  #  - cron:  5 0 * * * 
      # Runs at 00:05 UTC every day
      # https://tool.lu/crontab/ 
  #watch:
  #    types: started   

jobs:
  Deploy:
    runs-on: ubuntu-latest
    #runs-on: ubuntu-18.04
    #if: github.event.repository.owner.id == github.event.sender.id
    # https://p3terx.com/archives/github-actions-manual-trigger.html
    # https://docs.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#supported-runners-and-hardware-resources
    
    steps:
    - uses: actions/checkout@v2

    - name: Install Halyard
      run: |
        echo "###user" && whoami 
        echo "###system version" &&  cat /etc/issue
        echo "###docker info" && docker info 
        
        # curl -O https://raw.githubusercontent.com/spinnaker/halyard/master/install/debian/InstallHalyard.sh
        echo "###### pwd ######"
        pwd

        chmod +x ./InstallHalyard.sh
        sudo bash InstallHalyard.sh --user runner -y
        
        # useradd -m zhang
        # bash InstallHalyard.sh --user zhang -y
        
        # sudo apt-get update && sudo apt-get install openjdk-8-jdk -y
        # cat /var/log/spinnaker/halyard/halyard.log
        
        hal -v    
        hal version list
        echo "###### hal version bom ######"
        hal version bom ${SPINNAKER_VERSION} -q -o yaml     

    - name: Install Kubectl and Configuration
      run: |
        echo "###### pwd ######"
        pwd

        cd /home/runner
        
        curl -LO https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/bin/kubectl
        
        mkdir /home/runner/.kube
        cat <<-EOF > /home/runner/.kube/config
        ${{ secrets.KUBECONFIG }}
        EOF
        
        echo "###### kubectl version ######"
        kubectl version
        
        echo "###### pwd ######"
        pwd

    - name: Config kubernetes Cluster
      run: |
        sudo hal config version edit --version ${SPINNAKER_VERSION}

        hal config provider kubernetes enable
        hal config provider kubernetes account add my-k8s \
           --provider-version v2 \
           --context $(kubectl config current-context)
        
        hal config deploy edit --type=distributed --account-name my-k8s
        
        ### hal config deploy edit \
        ###     --account-name default \
        ###     --type distributed \
        ###     --location spinnaker \
        ###     --no-validate
        
        ### Add Other kubernetes Cluster
        ### hal config provider kubernetes account add my-k8s-int --provider-version v2  --kubeconfig-file /root/.kube/config
    
    - name: Config storage
      run: |
        hal config storage edit --type redis

        #### config s3

    - name: Config Spinnaker features
      run: |
        ###hal config features edit --jobs true
        hal config features edit --pipeline-templates true
        hal config features edit --artifacts true
        hal config features edit --managed-pipeline-templates-v2-ui true

    - name: Config Spinnaker Images
      run: |
        cd /home/runner/.hal/default/ && \
        mkdir service-settings && \
        cd service-settings    
        
        echo "###### pwd ######"
        pwd
       
        sh /home/runner/work/spinnaker-auto-install/spinnaker-auto-install/config-images.sh	
        echo "###### ls ######"
        ls
    - name: Deploy Spinnaker
      run: |
        # hal deploy apply
        
        ## hal config security ui edit --override-base-url ${DECK_HOST} --no-validate
        ## hal config security api edit --override-base-url ${GATE_HOST} --no-validate
        ## hal deploy apply --no-validate
        
    - name: Deploy Spinnaker Ingress
      run: |
        ### sh /home/runner/work/spinnaker-auto-install/spinnaker-auto-install/create-ingress.sh

        echo "###### Congratulations, installation and deployment of Spinnaker is complete ! ######"     
